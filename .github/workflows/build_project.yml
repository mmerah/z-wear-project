# This is a basic workflow to help you get started with Actions

name: Build and Release Latest

on:
  push:
    branches: [ main ]
    paths:
      - application/app/**
  pull_request:
    branches: [ main ]
    paths:
      - application/app/**

jobs:
  build:
    runs-on: ubuntu-latest
    container: zephyrprojectrtos/ci:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          path: z-wear-project

      - name: Install the required tools
        working-directory: z-wear-project
        run: |
          sudo apt update
          sudo apt upgrade -y
          wget https://apt.kitware.com/kitware-archive.sh
          sudo bash kitware-archive.sh
          sudo apt install --no-install-recommends git cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
            make gcc gcc-multilib g++-multilib libsdl2-dev -y
      
      - name: Install west and nRF Connect SDK
        working-directory: z-wear-project
        run: |
          pip3 install --user west
          west init -m https://github.com/nrfconnect/sdk-nrf --mr v1.7.0
          west update
          west zephyr-export

      - name: Install additional Python dependencies
        working-directory: z-wear-project
        run: |
          pip3 install -r zephyr/scripts/requirements.txt
          pip3 install -r nrf/scripts/requirements.txt
          pip3 install -r bootloader/mcuboot/scripts/requirements.txt

      - name: Install the GNU Arm Embedded Toolchain
        working-directory: z-wear-project
        shell: bash
        run: |
          mkdir ~/gnuarmemb
          wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2019q4/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2
          sudo tar xjf gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2 -C ~/gnuarmemb
          export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
          export GNUARMEMB_TOOLCHAIN_PATH="~/gnuarmemb/gcc-arm-none-eabi-9-2019-q4-major"
          source zephyr/zephyr-env.sh

      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}} 

      - name: Get version variable
        id: getversion
        working-directory: z-wear-project
        run:
          echo "::set-output name=version::$(cat application/app/info/sw_version.txt)"

      - name: Build firmware
        working-directory: z-wear-project
        run: |
          west build application/app/ -b nrf52840dk_nrf52840 -- -DCONFIG_MCUBOOT_IMAGE_VERSION=\"${{ steps.getversion.outputs.version }}+${{ steps.buildnumber.outputs.build_number }}\"
          
      - name: Archive firmware
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: z-wear-project/build/zephyr/zephyr.*

      - name: Rename update image
        working-directory: z-wear-project
        run: |
          mv build/zephyr/app_update.bin build/zephyr/app_update_v${{ steps.getversion.outputs.version }}.bin
          
      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@v1.2.1
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: v${{ steps.getversion.outputs.version }}
          prerelease: true
          title: "Development Build"
          files: |
            z-wear-project/LICENSE
            z-wear-project/build/zephyr/app_update_v${{ steps.getversion.outputs.version }}.bin
            z-wear-project/build/zephyr/merged.hex
